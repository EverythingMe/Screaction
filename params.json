{"name":"Screaction","body":"Page scrolls - elements react. Simple and lightweight.\r\n1KB, no dependencies, all modern desktop browsers.\r\n\r\nInstallation\r\n------------\r\n\r\n1. [Download](https://github.com/doat/Screaction/downloads) or fork.\r\n2. Call the script from you html page `<script src=\"Screaction.min.js\"></script>`\r\n3. Prepare a configuration object.\r\n4. Call `Screaction.init(cfg)` when DOM is ready.\r\n\r\nDemo\r\n----\r\n\r\n* [Fixed header](http://doat.github.com/Screaction/examples/fixed-header.html)\r\n* [The Everything.me blog](http://blog.everything.me)\r\n\r\nExample usage\r\n----------\r\n\r\n```\r\n// configuraition object\r\nvar cfg = {\r\n    \"scrollRange\": \"50-300\",\r\n    \"items\": [{\r\n        \"element\": document.getElementById(\"el\"),\r\n        \"props\": [{\r\n            \"name\": \"height\",\r\n            \"start\": 100,\r\n            \"end\": 200\r\n        }]\r\n    }]\r\n};\r\n\r\n// load it\r\nwindow.onload = function(){\r\n    Screaction.init(cfg);\r\n}\r\n```\r\n\r\nSimple configuration\r\n--------------------\r\n\r\n**scrollRange** - \r\nDefines the start and end scrollbar position (in pixels) in which you desire the animations to occur. (optional. Default is \"0-400\")\r\n\r\n**items** - \r\nA list of items.\r\n\r\n**item** - \r\nAn element and it's animation properties.\r\n\r\n```\r\n{\r\n      \"element\": {DOM element},\r\n      \"props\": [{\r\n        \"name\": {style property name}, // any element.style key\r\n        \"start\": {start value}, // numeric\r\n        \"end\": {end value} // numeric\r\n      }]\r\n}\r\n```\r\n\r\nAdvanced\r\n--------\r\n\r\nBy default, all start/end values are post fixed with a \"px\" unit.\r\n**For other units**, override with a template definition where `{value}` is where the calculated value will go:\r\n\r\n```\r\n{\r\n      \"element\": document.getElementById(\"el\"),\r\n      \"props\": [{\r\n        \"name\": \"width\",\r\n        \"valueTemplate\": \"{value}%\"\r\n        \"start\": 100,\r\n        \"end\": 200\r\n      }]\r\n}\r\n```\r\n\r\nHere's another example, with **two values per property**:\r\n\r\n```\r\n{\r\n    \"element\": document.getElementById(\"el\"),\r\n    \"props\": [{\r\n        \"name\": \"backgroundSize\",\r\n        \"valueTemplate\": \"{value}% {value}%\"\r\n        \"start\": [100, 100],\r\n        \"end\": [200, 200]\r\n    }]\r\n}\r\n```\r\n\r\nIf a single element has **multiple properties** to be affected, you can use shorthand:\r\n\r\n```\r\n{\r\n    \"element\": document.getElementById(\"el\"),\r\n    \"props\": [{\r\n        \"name\": \"top\",\r\n        \"start\": 50,\r\n        \"end\": 10\r\n    }, {\r\n        \"name\": \"left\",\r\n        \"start\": 20,\r\n        \"end\": 75\r\n    }, {\r\n        \"name\": \"opacity\",\r\n        \"start\": 1,\r\n        \"end\": 0.5\r\n    }]\r\n}\r\n```\r\n\r\nYou can attach a callback function and get the current scroll *ratio*\r\n\r\n```\r\nScreaction.onScroll(function(ratio){\r\n    // your code\r\n});\r\n```\r\n ","tagline":"A js script enabling you to change css values as the page scrolls","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}